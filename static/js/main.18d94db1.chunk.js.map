{"version":3,"sources":["Models.ts","UI/LeftPanel.tsx","UI/OperationsPanel.tsx","UI/TopInfoPanel.tsx","UI/RightPanel.tsx","UI/PartsPanel.tsx","UI/PartRenderer.tsx","UI/Part.tsx","UI/MainWindow.tsx","UI/ReactorPanel.tsx","UI/ReactorCell.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["PartCategory","PartType","LeftPanel","handleSelectedPartChange","part","props","onSelectedPartChange","handleMouseEnterPart","onMouseEnterPart","handleMouseLeavePart","onMouseLeavePart","handleManualWentHold","onManualWentHold","handleManualWentRelease","onManualWentRelease","handlePauseClick","onPauseClick","handleSellEnergyClick","onSellEnergyClick","hudData","currentEnergy","this","appState","numbers","maxEnergy","currentHeat","maxHeat","moneyOwned","heatGrowPerTick","energyGrowPerTick","wenting","pause","className","parts","selectedPart","React","Component","OperationsPanel","handleContextMenu","e","preventDefault","handleWentMouseDown","handleWentMouseUp","handleWentMouseLeave","onContextMenu","onMouseDown","onMouseUp","onMouseLeave","onClick","TopInfoPanel","showInfoOf","_renderPartInfo","name","description","RightPanel","reactorPanel","createRef","mouseoverPart","ref","reactorProps","current","tickElapsed","PartsPanel","rows","length","grid","Array","y","x","p","key","id","onMouseEnter","map","partsRow","rowIndex","PartRenderer","category","Models","FuelCell","cellsCount","Math","pow","stage","cellPacket","i","push","getTypeName","type","toLowerCase","Part","handleMouseLeaving","isSelected","title","handleMouseEnter","renderPart","isAlreadySelected","MainWindow","righPanel","setState","undefined","state","reactorDefinition","ReactorPanel","handleMouseClick","row","col","stateCopy","cloneDeep","cols","gridLayout","placedPart","onLMBClick","onRMBClick","reactorRow","reactorCell","resetGrowsPerTick","tickElapsedExecute","reduceDurability","collectHeat","collectEnergy","currentDurability","ReactorCell","handleClick","getDurabilityIconClass","baseDurability","App","timerId","mainWindow","tick","calculateHeat","calculateEnergy","sellEnergy","chronometerStart","chronometerStop","selling","GameData","Parts","reactor","setInterval","ticksPerSecond","clearInterval","s","Uranium","symbol","baseCost","basePower","baseHeat","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.18d94db1.chunk.js","sourcesContent":["export interface IPartDef {\r\n    category: PartCategory,\r\n    type: PartType;\r\n    id: string,\r\n    name: string,\r\n    description: string,\r\n    symbol: string,\r\n    baseCost: number,\r\n    baseDurability: number,\r\n    basePower: number,\r\n    baseHeat: number,\r\n    stage: number,\r\n    currentDurability: number\r\n}\r\n\r\nexport interface IReactorProperties {\r\n    cols: number,\r\n    rows: number\r\n}\r\n\r\nexport interface IGameData {\r\n    currentHeat: number;\r\n    maxHeat: number;\r\n    currentEnergy: number;\r\n    maxEnergy: number;\r\n    moneyOwned: number;\r\n    heatGrowPerTick: number;\r\n    energyGrowPerTick: number;\r\n    ticksPerSecond: number;\r\n    reactor: IReactorProperties;\r\n}\r\n\r\nexport enum PartCategory {\r\n    FuelCell\r\n}\r\n\r\nexport enum PartType {\r\n    Uranium\r\n}","import React from 'react';\r\n\r\nimport { IAppState } from '../App';\r\nimport * as Models from '../Models';\r\nimport * as UI from './';\r\nimport * as UIModels from './Models';\r\n\r\ninterface ILeftPanelProps {\r\n    parts: Models.IPartDef[];\r\n    selectedPart?: Models.IPartDef;\r\n    appState: IAppState;\r\n    onSelectedPartChange(part: Models.IPartDef): void;\r\n    onMouseEnterPart(part: Models.IPartDef): void;\r\n    onMouseLeavePart(): void;\r\n    onPauseClick(): void;\r\n    onSellEnergyClick(): void;\r\n    onManualWentHold(): void;\r\n    onManualWentRelease(): void;\r\n}\r\n\r\ninterface ILeftPanelState {\r\n}\r\n\r\nexport class LeftPanel extends React.Component<ILeftPanelProps, ILeftPanelState> {\r\n    render() {\r\n        var hudData: UIModels.IHudData = {\r\n            currentEnergy: this.props.appState.numbers.currentEnergy,\r\n            maxEnergy: this.props.appState.numbers.maxEnergy,\r\n            currentHeat: this.props.appState.numbers.currentHeat,\r\n            maxHeat: this.props.appState.numbers.maxHeat,\r\n            moneyOwned: this.props.appState.numbers.moneyOwned,\r\n            heatGrowPerTick: this.props.appState.numbers.heatGrowPerTick,\r\n            energyGrowPerTick: this.props.appState.numbers.energyGrowPerTick,\r\n            wenting: this.props.appState.wenting,\r\n            pause: this.props.appState.pause\r\n        };\r\n\r\n        return (\r\n            <div className=\"LeftPanel\">\r\n                <UI.OperationsPanel hudData={hudData}\r\n                    onManualWentHold={this.handleManualWentHold}\r\n                    onManualWentRelease={this.handleManualWentRelease}\r\n                    onPauseClick={this.handlePauseClick}\r\n                    onSellEnergyClick={this.handleSellEnergyClick} />\r\n                <UI.PartsPanel parts={this.props.parts} selectedPart={this.props.selectedPart}\r\n                    onSelectedPartChange={this.handleSelectedPartChange}\r\n                    onMouseEnterPart={this.handleMouseEnterPart}\r\n                    onMouseLeavePart={this.handleMouseLeavePart} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private handleSelectedPartChange = (part: Models.IPartDef) => {\r\n        this.props.onSelectedPartChange(part);\r\n    }\r\n\r\n    private handleMouseEnterPart = (part: Models.IPartDef) => {\r\n        this.props.onMouseEnterPart(part);\r\n    }\r\n\r\n    private handleMouseLeavePart = () => {\r\n        this.props.onMouseLeavePart();\r\n    }\r\n\r\n    private handleManualWentHold = () => {\r\n        this.props.onManualWentHold();\r\n    }\r\n\r\n    private handleManualWentRelease = () => {\r\n        this.props.onManualWentRelease();\r\n    }\r\n\r\n    private handlePauseClick = () => {\r\n        this.props.onPauseClick();\r\n    }\r\n\r\n    private handleSellEnergyClick = () =>{\r\n        this.props.onSellEnergyClick();\r\n    }\r\n}","import React from 'react';\r\nimport { FaReact } from 'react-icons/fa';\r\nimport { IoIosSwap, IoMdNuclear } from 'react-icons/io';\r\n\r\nimport * as UIModels from './Models';\r\n\r\ninterface IOperationsPanelProps {\r\n    hudData: UIModels.IHudData\r\n    onPauseClick(): void;\r\n    onSellEnergyClick(): void;\r\n    onManualWentHold(): void;\r\n    onManualWentRelease(): void;\r\n}\r\n\r\nexport class OperationsPanel extends React.Component<IOperationsPanelProps, {}> {\r\n    render() {\r\n        let hudData = this.props.hudData;\r\n\r\n        return (\r\n            <div className=\"OperationsPanel\" onContextMenu={this.handleContextMenu}>\r\n                <div className=\"heat-meter\">\r\n                    <div className={\"icon manual-wenting \" + (hudData.wenting ? \"working\" : \"idle\")}>\r\n                        <IoMdNuclear onMouseDown={this.handleWentMouseDown} onMouseUp={this.handleWentMouseUp} onMouseLeave={this.handleWentMouseLeave} />\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <div>{hudData.currentHeat} / {hudData.maxHeat}</div>\r\n                        <div>+{hudData.heatGrowPerTick}/tk</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"energy-meter\">\r\n                    <div className={\"icon power-generation \" + (hudData.pause ? \"idle\" : \"working\")}>\r\n                        <FaReact onClick={this.handlePauseClick} />\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <div>{hudData.currentEnergy} / {hudData.maxEnergy}</div>\r\n                        <div>+{hudData.energyGrowPerTick}/tk</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"sell-energy button\" onClick={this.handleSellEnergyClick}>\r\n                    <div className=\"button-icon\"><IoIosSwap /></div>\r\n                    <div className=\"button-label\">Export energy</div>\r\n                </div>\r\n                <div className=\"money-display\">${hudData.moneyOwned}</div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    private handleContextMenu = (e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    private handlePauseClick = () => {\r\n        this.props.onPauseClick();\r\n    }\r\n\r\n    private handleWentMouseDown = () => {\r\n        this.props.onManualWentHold();\r\n    }\r\n\r\n    private handleWentMouseUp = () => {\r\n        this.props.onManualWentRelease();\r\n    }\r\n\r\n    private handleWentMouseLeave = () => {\r\n        this.props.onManualWentRelease();\r\n    }\r\n\r\n    private handleSellEnergyClick = () => {\r\n        this.props.onSellEnergyClick();\r\n    }\r\n}","import React from 'react';\r\n\r\nimport * as Models from '../Models';\r\n\r\ninterface ITopInforPanel {\r\n    showInfoOf?: Models.IPartDef;\r\n}\r\n\r\nexport class TopInfoPanel extends React.Component<ITopInforPanel, {}> {\r\n    render() {\r\n        return (\r\n            <div className=\"TopInfoPanel\">\r\n                {this.props.showInfoOf && this._renderPartInfo()}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    private _renderPartInfo() {\r\n        return (\r\n            <div>\r\n                <div className=\"part-title\">{this.props.showInfoOf!.name}</div>\r\n                <div className=\"part-desc\">\r\n                    {this.props.showInfoOf!.description}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport { IAppState } from '../App';\r\nimport * as Models from '../Models';\r\nimport * as UI from './';\r\n\r\ninterface IRightPanelProps {\r\n    reactorProps: any;\r\n    selectedPart?: Models.IPartDef;\r\n    mouseoverPart?: Models.IPartDef;\r\n    onMouseEnterPart(part: Models.IPartDef): void;\r\n    onMouseLeavePart(): void;\r\n}\r\n\r\ninterface IRightPanelState {\r\n}\r\n\r\nexport class RightPanel extends React.Component<IRightPanelProps, IRightPanelState> {\r\n    private reactorPanel: React.RefObject<UI.ReactorPanel>;\r\n\r\n    constructor(props: IRightPanelProps) {\r\n        super(props);\r\n        this.reactorPanel = React.createRef();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"RightPanel\">\r\n                <UI.TopInfoPanel showInfoOf={this.props.mouseoverPart} />\r\n                <UI.ReactorPanel ref={this.reactorPanel} reactorProps={this.props.reactorProps} selectedPart={this.props.selectedPart}\r\n                    onMouseEnterPart={this.handleMouseEnterPart}\r\n                    onMouseLeavePart={this.handleMouseLeavePart}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    public tickElapsed(appState: IAppState) {\r\n        this.reactorPanel.current!.tickElapsed(appState);\r\n    }\r\n\r\n    private handleMouseEnterPart = (part: Models.IPartDef) => {\r\n        this.props.onMouseEnterPart(part);\r\n    }\r\n\r\n    private handleMouseLeavePart = () => {\r\n        this.props.onMouseLeavePart();\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport * as Models from '../Models';\r\nimport * as UI from './';\r\n\r\ninterface IPartsPanelProps {\r\n    parts: Models.IPartDef[];\r\n    selectedPart?: Models.IPartDef;\r\n    onSelectedPartChange(part: Models.IPartDef): void;\r\n    onMouseEnterPart(part: Models.IPartDef): void;\r\n    onMouseLeavePart(): void;\r\n}\r\n\r\ninterface IPartsPanelState {\r\n}\r\n\r\nexport class PartsPanel extends React.Component<IPartsPanelProps, IPartsPanelState> {\r\n    render() {\r\n        const parts = this.props.parts;\r\n        const cols = 3;\r\n        const rows = parts.length / cols;\r\n\r\n        let grid = new Array(rows);\r\n\r\n        for (let y = 0; y < rows; y++) {\r\n            grid[y] = new Array(cols);\r\n            for (let x = 0; x < cols; x++) {\r\n                let p = parts[y * cols + x];\r\n                grid[y][x] = <UI.Part part={p} key={p.id} selectedPart={this.props.selectedPart}\r\n                    onSelectedPartChange={this.handleSelectedPartChange}\r\n                    onMouseEnter={this.handleMouseEnterPart}\r\n                    onMouseLeave={this.handleMouseLeavePart} />;\r\n            }\r\n        }\r\n\r\n        return (<div className=\"PartsPanel\" onContextMenu={this.handleContextMenu}>\r\n            {grid.map((partsRow, rowIndex) =>\r\n                <div className=\"parts-row\" key={\"ReactorRow_\" + rowIndex}>\r\n                    {partsRow.map((part: Models.IPartDef) => part)}\r\n                </div>\r\n            )}</div>)\r\n    };\r\n    \r\n    private handleContextMenu = (e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    private handleSelectedPartChange = (part: Models.IPartDef) => {\r\n        this.props.onSelectedPartChange(part);\r\n    }\r\n\r\n    private handleMouseEnterPart = (part: Models.IPartDef) => {\r\n        this.props.onMouseEnterPart(part);\r\n    }\r\n\r\n    private handleMouseLeavePart = () => {\r\n        this.props.onMouseLeavePart();\r\n    }\r\n}","import React from 'react';\r\nimport { IoMdBatteryCharging } from 'react-icons/io';\r\n\r\nimport * as Models from '../Models';\r\n\r\nexport abstract class PartRenderer<T, U> extends React.Component<T, U> {\r\n    protected renderPart(part: Models.IPartDef) {\r\n        switch (part.category) {\r\n            case Models.PartCategory.FuelCell:\r\n                let cellsCount = Math.pow(2, part.stage - 1);\r\n                let cellPacket = [];\r\n                for (let i = 0; i < cellsCount; i++) {\r\n                    cellPacket.push(<IoMdBatteryCharging className={\"fuel-cell-\" + i} key={\"fuelCellPart_\" + i} />);\r\n                }\r\n\r\n                return <div className={(\"fuel-cells-\" + cellsCount) + \" \" + this.getTypeName(part.type).toLowerCase() + \"-cells\"}>\r\n                    {cellPacket.map(p => p)}\r\n                </div>;\r\n        }\r\n    }\r\n\r\n    private getTypeName(type: Models.PartType): string{\r\n        return Models.PartType[type];\r\n    }\r\n}","import React from 'react';\r\n\r\nimport * as Models from '../Models';\r\nimport { PartRenderer } from './PartRenderer';\r\n\r\ninterface IPartProps {\r\n    part: Models.IPartDef;\r\n    selectedPart?: Models.IPartDef;\r\n    onSelectedPartChange(part: Models.IPartDef | null): void;\r\n    onMouseEnter(part: Models.IPartDef): void;\r\n    onMouseLeave(): void;\r\n}\r\n\r\ninterface IPartState {\r\n}\r\n\r\nexport class Part extends PartRenderer<IPartProps, IPartState> {\r\n    render() {\r\n        const p = this.props.part;\r\n        const isSelected = this.props.selectedPart ? this.props.selectedPart.id === p.id : false;\r\n\r\n        return (\r\n            <div className={\"Part \" + (isSelected ? \"selected\" : \"\")} title={p.name}\r\n                onClick={() => this.handleSelectedPartChange(p, isSelected)}\r\n                onMouseEnter={() => this.handleMouseEnter(p)}\r\n                onMouseLeave={this.handleMouseLeaving}>\r\n                {this.renderPart(p)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private handleSelectedPartChange(part: Models.IPartDef | null, isAlreadySelected: boolean) {\r\n        this.props.onSelectedPartChange(isAlreadySelected ? null : part);\r\n    }\r\n\r\n    private handleMouseEnter(part: Models.IPartDef) {\r\n        this.props.onMouseEnter(part);\r\n    }\r\n\r\n    private handleMouseLeaving = () => {\r\n        this.props.onMouseLeave();\r\n    }\r\n}","import React from 'react';\r\n\r\nimport { IAppState } from '../App';\r\nimport * as Models from '../Models';\r\nimport * as UI from './';\r\n\r\ninterface IMainWindowParts {\r\n    parts: Models.IPartDef[];\r\n    reactorDefinition: Models.IReactorProperties;\r\n    appState: IAppState;\r\n    onPauseClick(): void;\r\n    onSellEnergyClick(): void;\r\n    onManualWentHold(): void;\r\n    onManualWentRelease(): void;\r\n}\r\n\r\ninterface IMainWindowState {\r\n    selectedPart?: Models.IPartDef;\r\n    mouseoverPart?: Models.IPartDef;\r\n}\r\n\r\nexport class MainWindow extends React.Component<IMainWindowParts, IMainWindowState> {\r\n    private righPanel: React.RefObject<UI.RightPanel>;\r\n\r\n    constructor(props: IMainWindowParts) {\r\n        super(props);\r\n        this.righPanel = React.createRef();\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"MainWindow\" >\r\n                <UI.LeftPanel parts={this.props.parts} selectedPart={this.state.selectedPart}\r\n                    appState={this.props.appState}\r\n                    onSelectedPartChange={this.handleSelectedPartChange}\r\n                    onMouseEnterPart={this.handleMouseEnterPart}\r\n                    onMouseLeavePart={this.handleMouseLeavePart}\r\n                    onManualWentHold={this.handleManualWentHold}\r\n                    onManualWentRelease={this.handleManualWentRelease}\r\n                    onPauseClick={this.handlePauseClick}\r\n                    onSellEnergyClick={this.handleSellEnergyClick} />\r\n                <UI.RightPanel ref={this.righPanel} reactorProps={this.props.reactorDefinition}\r\n                    selectedPart={this.state.selectedPart} \r\n                    mouseoverPart={this.mouseoverPart}\r\n                    onMouseEnterPart={this.handleMouseEnterPart}\r\n                    onMouseLeavePart={this.handleMouseLeavePart} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    public tickElapsed(appState: IAppState) {\r\n        this.righPanel.current!.tickElapsed(appState);\r\n    }\r\n\r\n    private handleSelectedPartChange = (part: Models.IPartDef) => {\r\n        this.setState({ selectedPart: part });\r\n    }\r\n\r\n    private handleMouseEnterPart = (part: Models.IPartDef) => {\r\n        this.setState({ mouseoverPart: part });\r\n    }\r\n\r\n    private handleMouseLeavePart = () => {\r\n        this.setState({ mouseoverPart: undefined });\r\n    }\r\n\r\n    private get mouseoverPart(): Models.IPartDef | undefined {\r\n        return this.state.mouseoverPart || this.state.selectedPart;\r\n    }\r\n\r\n    private handleManualWentHold = () => {\r\n        this.props.onManualWentHold();\r\n    }\r\n\r\n    private handleManualWentRelease = () => {\r\n        this.props.onManualWentRelease();\r\n    }\r\n\r\n    private handlePauseClick = () => {\r\n        this.props.onPauseClick();\r\n    }\r\n    private handleSellEnergyClick = () => {\r\n        this.props.onSellEnergyClick();\r\n    }\r\n}","import cloneDeep from 'lodash/cloneDeep';\r\nimport React from 'react';\r\n\r\nimport { IAppState } from '../App';\r\nimport * as Models from '../Models';\r\nimport * as UI from './';\r\n\r\ninterface IReactorPanelProps {\r\n    reactorProps: Models.IReactorProperties;\r\n    selectedPart?: Models.IPartDef;\r\n    onMouseEnterPart(part: Models.IPartDef): void;\r\n    onMouseLeavePart(): void;\r\n}\r\n\r\ninterface IReactorPanelState {\r\n    grid: (Models.IPartDef | null)[][];\r\n}\r\n\r\nexport class ReactorPanel extends React.Component<IReactorPanelProps, IReactorPanelState> {\r\n    constructor(props: IReactorPanelProps) {\r\n        super(props);\r\n\r\n        this.state = { grid: new Array(props.reactorProps.rows) };\r\n\r\n        for (let y = 0; y < props.reactorProps.rows; y++) {\r\n            this.state.grid[y] = new Array(props.reactorProps.cols);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const props = this.props.reactorProps;\r\n        let gridLayout = new Array(props.rows);\r\n\r\n        for (let y = 0; y < props.rows; y++) {\r\n            gridLayout[y] = new Array(props.cols);\r\n            for (let x = 0; x < props.cols; x++) {\r\n                gridLayout[y][x] =\r\n                    <UI.ReactorCell x={x} y={y} key={\"ReactorCell_\" + x + \"_\" + y}\r\n                        selectedPart={this.props.selectedPart} placedPart={this.state.grid[y][x]}\r\n                        onMouseEnter={this.handleMouseEnterPart}\r\n                        onMouseLeave={this.handleMouseLeavePart}\r\n                        onLMBClick={this.handleMouseClick}\r\n                        onRMBClick={this.handleContextMenu} />;\r\n            }\r\n        }\r\n\r\n        return (<div className=\"ReactorPanel\">{gridLayout.map((reactorRow, rowIndex) =>\r\n            <div className=\"reactor-row\" key={\"ReactorRow_\" + rowIndex}>\r\n                {reactorRow.map((reactorCell: any) => reactorCell)}\r\n            </div>\r\n        )}</div>)\r\n    };\r\n\r\n    public tickElapsed(appState: IAppState) {\r\n        let stateCopy = cloneDeep(this.state);\r\n\r\n        this.resetGrowsPerTick(appState.numbers);\r\n        this.tickElapsedExecute(stateCopy, appState.numbers);\r\n\r\n        this.setState(stateCopy);\r\n    }\r\n\r\n    private resetGrowsPerTick(numbers: Models.IGameData) {\r\n        numbers.heatGrowPerTick = 0;\r\n        numbers.energyGrowPerTick = 0;\r\n    }\r\n\r\n    private tickElapsedExecute(stateCopy: IReactorPanelState, numbers: Models.IGameData) {\r\n        const props = this.props.reactorProps;\r\n        for (let y = 0; y < props.rows; y++) {\r\n            for (let x = 0; x < props.cols; x++) {\r\n                let part = stateCopy.grid[y][x];\r\n                if (part) {\r\n                    this.reduceDurability(part!);\r\n                    numbers.heatGrowPerTick += this.collectHeat(part!);\r\n                    numbers.energyGrowPerTick += this.collectEnergy(part!);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private reduceDurability(part: Models.IPartDef) {\r\n        if (part.currentDurability > 0) {\r\n            part.currentDurability--;\r\n        }\r\n    }\r\n\r\n    private collectHeat(part: Models.IPartDef): number {\r\n        return 0; //TODO\r\n    }\r\n\r\n    private collectEnergy(part: Models.IPartDef): number {\r\n        return 0; //TODO\r\n    }\r\n\r\n    private handleMouseEnterPart = (part: Models.IPartDef) => {\r\n        this.props.onMouseEnterPart(part);\r\n    }\r\n\r\n    private handleMouseLeavePart = () => {\r\n        this.props.onMouseLeavePart();\r\n    }\r\n\r\n    //potential performance issue:\r\n    //deep cloning whole grid\r\n    private handleMouseClick = (row: number, col: number) => {\r\n        if (!this.state.grid[row][col] && this.props.selectedPart) {\r\n            let stateCopy = cloneDeep(this.state);\r\n            stateCopy.grid[row][col] = cloneDeep(this.props.selectedPart!);\r\n            this.setState(stateCopy);\r\n        }\r\n    }\r\n\r\n    //potential performance issue:\r\n    //deep cloning whole grid\r\n    private handleContextMenu = (row: number, col: number) => {\r\n        if (this.state.grid[row][col]) {\r\n            let stateCopy = cloneDeep(this.state);\r\n            stateCopy.grid[row][col] = null;\r\n            this.setState(stateCopy);\r\n        }\r\n    }\r\n}","import React from 'react';\r\n\r\nimport * as Models from '../Models';\r\nimport { PartRenderer } from './PartRenderer';\r\n\r\ninterface IReactorCellProps {\r\n    selectedPart?: Models.IPartDef;\r\n    placedPart: Models.IPartDef | null;\r\n    x: number;\r\n    y: number;\r\n    onMouseEnter(part: Models.IPartDef): void;\r\n    onMouseLeave(): void;\r\n    onLMBClick(row: number, col: number): void;\r\n    onRMBClick(row: number, col: number): void;\r\n}\r\n\r\ninterface IReactorCellState {\r\n}\r\n\r\nexport class ReactorCell extends PartRenderer<IReactorCellProps, IReactorCellState> {\r\n    render() {\r\n        let x = this.props.x, y = this.props.y;\r\n        return (<div className=\"ReactorCell\" key={\"ReactorCell_\" + x + \"_\" + y}\r\n            onClick={this.handleClick}\r\n            onContextMenu={this.handleContextMenu}\r\n            onMouseEnter={this.handleMouseEnter}\r\n            onMouseLeave={this.handleMouseLeaving}>\r\n            {this.props.placedPart ? this.renderPart(this.props.placedPart) : null}\r\n            <div className={\"durability-icon \" + this.getDurabilityIconClass()}>&nbsp;</div>\r\n        </div>);\r\n    }\r\n\r\n    private getDurabilityIconClass(): string {\r\n        const part = this.props.placedPart;\r\n        if (part) {\r\n            if (part.currentDurability >= 0.5 * part.baseDurability) {\r\n                return \"high\";\r\n            }\r\n            else if (part.currentDurability < 0.5 * part.baseDurability \r\n                && part.currentDurability >= 0.2 * part.baseDurability) {\r\n                return \"medium\";\r\n            }\r\n            else if(part.currentDurability > 0){\r\n                return \"low\";\r\n            }\r\n            else{\r\n                return \"depleted\";\r\n            }\r\n        }\r\n\r\n        return \"\";\r\n    }\r\n\r\n    private handleMouseEnter = () => {\r\n        if (this.props.placedPart) {\r\n            this.props.onMouseEnter(this.props.placedPart);\r\n        }\r\n    }\r\n\r\n    private handleMouseLeaving = () => {\r\n        if (this.props.placedPart) {\r\n            this.props.onMouseLeave();\r\n        }\r\n    }\r\n\r\n    private handleClick = () => {\r\n        this.props.onLMBClick(this.props.y, this.props.x)\r\n    }\r\n\r\n    private handleContextMenu = (e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n        this.props.onRMBClick(this.props.y, this.props.x)\r\n    }\r\n}","import './App.scss';\r\nimport './UI.scss';\r\n\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport React from 'react';\r\n\r\nimport * as Models from './Models';\r\nimport * as UI from './UI';\r\n\r\nexport interface IAppState {\r\n  pause: boolean;\r\n  wenting: boolean;\r\n  selling: boolean;\r\n  numbers: Models.IGameData;\r\n}\r\n\r\nexport default class App extends React.Component<{}, IAppState> {\r\n  private timerId: NodeJS.Timeout | undefined;\r\n  private mainWindow: React.RefObject<UI.MainWindow>;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.mainWindow = React.createRef();\r\n    this.state = { pause: true, wenting: false, selling: false, numbers: GameData };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <UI.MainWindow parts={Parts} reactorDefinition={this.state.numbers.reactor}\r\n          appState={this.state}\r\n          onManualWentHold={this.handleManualWentHold}\r\n          onManualWentRelease={this.handleManualWentRelease}\r\n          onPauseClick={this.handlePauseClick}\r\n          onSellEnergyClick={this.handleSellEnergyClick}\r\n          ref={this.mainWindow} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.chronometerStop();\r\n  }\r\n\r\n  private tick = () => {\r\n    let stateCopy = cloneDeep(this.state);\r\n    this.mainWindow.current!.tickElapsed(stateCopy);\r\n    this.calculateHeat(stateCopy);\r\n    this.calculateEnergy(stateCopy);\r\n    this.sellEnergy(stateCopy);\r\n\r\n    this.setState(stateCopy);\r\n  }\r\n\r\n  private calculateEnergy(state: IAppState) {\r\n    state.numbers.currentEnergy += state.numbers.energyGrowPerTick;\r\n  }\r\n\r\n  private calculateHeat(state: IAppState) {\r\n    state.numbers.currentHeat += state.numbers.heatGrowPerTick;\r\n  }\r\n\r\n  private sellEnergy(state: IAppState) {\r\n    if (state.selling) {\r\n      state.numbers.moneyOwned += state.numbers.currentEnergy;\r\n      state.numbers.currentEnergy = 0;\r\n    }\r\n    state.selling = false;\r\n  }\r\n\r\n  private handlePauseClick = () => {\r\n    if (this.state.pause) {\r\n      this.chronometerStart();\r\n    }\r\n    else {\r\n      this.chronometerStop()\r\n    }\r\n\r\n    this.setState({ pause: !this.state.pause });\r\n  }\r\n\r\n  private handleManualWentHold = () => {\r\n    this.setState({ wenting: true });\r\n  }\r\n\r\n  private handleManualWentRelease = () => {\r\n    this.setState({ wenting: false });\r\n  }\r\n\r\n  private handleSellEnergyClick = () => {\r\n    this.setState({ selling: true });\r\n  }\r\n\r\n  private chronometerStart() {\r\n    this.chronometerStop();\r\n    this.timerId = setInterval(this.tick, 1000 / this.state.numbers.ticksPerSecond);\r\n  }\r\n\r\n  private chronometerStop() {\r\n    if (this.timerId) {\r\n      clearInterval(this.timerId);\r\n    }\r\n\r\n    this.setState((s) => { s.numbers.heatGrowPerTick = 0; s.numbers.energyGrowPerTick = 0; });\r\n  }\r\n}\r\n\r\nconst GameData: Models.IGameData = {\r\n  currentHeat: 0,\r\n  maxHeat: 1000,\r\n  currentEnergy: 0,\r\n  maxEnergy: 100,\r\n  moneyOwned: 0,\r\n  heatGrowPerTick: 0,\r\n  energyGrowPerTick: 0,\r\n  ticksPerSecond: 1,\r\n  reactor: { cols: 10, rows: 10 }\r\n};\r\n\r\nconst Parts: Models.IPartDef[] = [\r\n  //Uranium Cells are specific and needs to be treated separately because their cost\r\n  //is not conforming to the unified cost calculation function\r\n  {\r\n    category: Models.PartCategory.FuelCell,\r\n    type: Models.PartType.Uranium,\r\n    id: \"cu1\",\r\n    name: \"Single Uranium Cell\",\r\n    description: \"Basic fuel cell. Generates 1 power and 1 heat.\",\r\n    symbol: \"[U1]\",\r\n    baseCost: 10,\r\n    baseDurability: 15,\r\n    currentDurability: 15,\r\n    basePower: 1,\r\n    baseHeat: 1,\r\n    stage: 1\r\n  },\r\n  {\r\n    category: Models.PartCategory.FuelCell,\r\n    type: Models.PartType.Uranium,\r\n    id: \"cu2\",\r\n    name: \"Double Uranium Cell\",\r\n    description: \"Basic fuel cell. Generates 4 power and 8 heat.\",\r\n    symbol: \"[U2]\",\r\n    baseCost: 25,\r\n    baseDurability: 15,\r\n    currentDurability: 15,\r\n    basePower: 4,\r\n    baseHeat: 8,\r\n    stage: 2\r\n  },\r\n  {\r\n    category: Models.PartCategory.FuelCell,\r\n    type: Models.PartType.Uranium,\r\n    id: \"cu3\",\r\n    name: \"Quad Uranium Cell\",\r\n    description: \"Basic fuel cell. Generates 12 power and 36 heat.\",\r\n    symbol: \"[U4]\",\r\n    baseCost: 60,\r\n    baseDurability: 15,\r\n    currentDurability: 15,\r\n    basePower: 12,\r\n    baseHeat: 36,\r\n    stage: 3\r\n  }\r\n];","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\ninterface IServiceWorkerConfig {\r\n  onUpdate(arg: any): any;\r\n  onSuccess(arg: any): any;\r\n}\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config: IServiceWorkerConfig) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config: IServiceWorkerConfig) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config: IServiceWorkerConfig) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}