{"version":3,"sources":["UI/LeftPanel.tsx","UI/OperationsPanel.tsx","UI/TopInfoPanel.tsx","UI/RightPanel.tsx","UI/PartsPanel.tsx","UI/Part.tsx","UI/MainWindow.tsx","UI/ReactorPanel.tsx","UI/ReactorCell.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LeftPanel","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","handleSelectedPartChange","part","props","onSelectedPartChange","handleMouseEnterPart","onMouseEnterPart","handleMouseLeavePart","onMouseLeavePart","inherits","createClass","key","value","react_default","a","createElement","className","OperationsPanel_OperationsPanel","PartsPanel_PartsPanel","parts","selectedPart","React","Component","OperationsPanel","TopInfoPanel","showInfoOf","_renderPartInfo","name","description","RightPanel","TopInfoPanel_TopInfoPanel","mouseoverPart","ReactorPanel_ReactorPanel","reactorProps","PartsPanel","rows","grid","y","x","p","Part_Part","id","onMouseEnter","onMouseLeave","map","partsRow","rowIndex","Part","handleMouseLeaving","_this2","isSelected","title","onClick","handleMouseEnter","symbol","isAlreadySelected","MainWindow","setState","undefined","state","LeftPanel_LeftPanel","RightPanel_RightPanel","reactorDefinition","get","ReactorPanel","Rows","Cols","ReactorCell_ReactorCell","reactorRow","reactorCell","ReactorCell","placedPart","handleClick","console","debug","cloneDeep","handleContextMenu","e","preventDefault","onContextMenu","partVisual","App","MainWindow_MainWindow","Parts","ReactorDefinition","category","baseCost","baseDurability","basePower","baseHeat","stage","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d0f5b62.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport * as Models from '../Models';\r\nimport * as UI from './';\r\n\r\ninterface ILeftPanelProps {\r\n    parts: Models.IPartDef[];\r\n    selectedPart?: Models.IPartDef;\r\n    onSelectedPartChange(part: Models.IPartDef): void;\r\n    onMouseEnterPart(part: Models.IPartDef): void;\r\n    onMouseLeavePart(): void;\r\n}\r\n\r\ninterface ILeftPanelState {\r\n}\r\n\r\nexport class LeftPanel extends React.Component<ILeftPanelProps, ILeftPanelState> {\r\n    render() {\r\n        return (\r\n            <div className=\"LeftPanel\">\r\n                <UI.OperationsPanel />\r\n                <UI.PartsPanel parts={this.props.parts} selectedPart={this.props.selectedPart}\r\n                    onSelectedPartChange={this.handleSelectedPartChange}\r\n                    onMouseEnterPart={this.handleMouseEnterPart}\r\n                    onMouseLeavePart={this.handleMouseLeavePart} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private handleSelectedPartChange = (part: Models.IPartDef) => {\r\n        this.props.onSelectedPartChange(part);\r\n    }\r\n\r\n    private handleMouseEnterPart = (part: Models.IPartDef) => {\r\n        this.props.onMouseEnterPart(part);\r\n    }\r\n\r\n    private handleMouseLeavePart = () => {\r\n        this.props.onMouseLeavePart();\r\n    }\r\n}","import React from 'react';\n\nexport class OperationsPanel extends React.Component<{}, {}> {\r\n    render() {\r\n        return (<div className=\"OperationsPanel\"></div>);\r\n    };\r\n}","import React from 'react';\r\n\r\nimport * as Models from '../Models';\r\n\r\ninterface ITopInforPanel {\r\n    showInfoOf?: Models.IPartDef;\r\n}\r\n\r\nexport class TopInfoPanel extends React.Component<ITopInforPanel, {}> {\r\n    render() {\r\n        return (\r\n            <div className=\"TopInfoPanel\">\r\n                {this.props.showInfoOf && this._renderPartInfo()}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    private _renderPartInfo() {\r\n        return (\r\n            <div>\r\n                <div className=\"part-title\">{this.props.showInfoOf!.name}</div>\r\n                <div className=\"part-desc\">\r\n                    {this.props.showInfoOf!.description}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport * as Models from '../Models';\r\nimport * as UI from './';\r\n\r\ninterface IRightPanelProps {\r\n    reactorProps: any;\r\n    selectedPart?: Models.IPartDef;\r\n    mouseoverPart?: Models.IPartDef;\r\n    onMouseEnterPart(part: Models.IPartDef): void;\r\n    onMouseLeavePart(): void;\r\n}\r\n\r\ninterface IRightPanelState {\r\n}\r\n\r\nexport class RightPanel extends React.Component<IRightPanelProps, IRightPanelState> {\r\n    render() {\r\n        return (\r\n            <div className=\"RightPanel\">\r\n                <UI.TopInfoPanel showInfoOf={this.props.mouseoverPart} />\r\n                <UI.ReactorPanel reactorProps={this.props.reactorProps} selectedPart={this.props.selectedPart}\r\n                    onMouseEnterPart={this.handleMouseEnterPart}\r\n                    onMouseLeavePart={this.handleMouseLeavePart}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private handleMouseEnterPart = (part: Models.IPartDef) => {\r\n        this.props.onMouseEnterPart(part);\r\n    }\r\n\r\n    private handleMouseLeavePart = () => {\r\n        this.props.onMouseLeavePart();\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport * as Models from '../Models';\r\nimport * as UI from './';\r\n\r\ninterface IPartsPanelProps {\r\n    parts: Models.IPartDef[];\r\n    selectedPart?: Models.IPartDef;\r\n    onSelectedPartChange(part: Models.IPartDef): void;\r\n    onMouseEnterPart(part: Models.IPartDef): void;\r\n    onMouseLeavePart(): void;\r\n}\r\n\r\ninterface IPartsPanelState {\r\n}\r\n\r\nexport class PartsPanel extends React.Component<IPartsPanelProps, IPartsPanelState> {\r\n    render() {\r\n        const parts = this.props.parts;\r\n        const cols = 3;\r\n        const rows = parts.length / cols;\r\n\r\n        let grid = new Array(rows);\r\n\r\n        for (let y = 0; y < rows; y++) {\r\n            grid[y] = new Array(cols);\r\n            for (let x = 0; x < cols; x++) {\r\n                let p = parts[y * cols + x];\r\n                grid[y][x] = <UI.Part part={p} key={p.id} selectedPart={this.props.selectedPart}\r\n                    onSelectedPartChange={this.handleSelectedPartChange}\r\n                    onMouseEnter={this.handleMouseEnterPart}\r\n                    onMouseLeave={this.handleMouseLeavePart} />;\r\n            }\r\n        }\r\n\r\n        return (<div className=\"PartsPanel\">{grid.map((partsRow, rowIndex) =>\r\n            <div className=\"parts-row\" key={\"ReactorRow_\" + rowIndex}>\r\n                {partsRow.map((part: Models.IPartDef) => part)}\r\n            </div>\r\n        )}</div>)\r\n    };\r\n\r\n    private handleSelectedPartChange = (part: Models.IPartDef) => {\r\n        this.props.onSelectedPartChange(part);\r\n    }\r\n\r\n    private handleMouseEnterPart = (part: Models.IPartDef) => {\r\n        this.props.onMouseEnterPart(part);\r\n    }\r\n\r\n    private handleMouseLeavePart = () => {\r\n        this.props.onMouseLeavePart();\r\n    }\r\n}","import React from 'react';\r\n\r\nimport * as Models from '../Models';\r\n\r\ninterface IPartProps {\r\n    part: Models.IPartDef;\r\n    selectedPart?: Models.IPartDef;\r\n    onSelectedPartChange(part: Models.IPartDef | null): void;\r\n    onMouseEnter(part: Models.IPartDef): void;\r\n    onMouseLeave(): void;\r\n}\r\n\r\ninterface IPartState {\r\n}\r\n\r\nexport class Part extends React.Component<IPartProps, IPartState> {\r\n    render() {\r\n        const p = this.props.part;\r\n        const isSelected = this.props.selectedPart ? this.props.selectedPart.id === p.id : false;\r\n\r\n        return (\r\n            <div className={\"Part \" + (isSelected ? \"selected\" : \"\")} title={p.name}\r\n                onClick={() => this.handleSelectedPartChange(p, isSelected)}\r\n                onMouseEnter={() => this.handleMouseEnter(p)}\r\n                onMouseLeave={this.handleMouseLeaving}>\r\n                {p.symbol}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private handleSelectedPartChange(part: Models.IPartDef | null, isAlreadySelected: boolean) {\r\n        this.props.onSelectedPartChange(isAlreadySelected ? null : part);\r\n    }\r\n\r\n    private handleMouseEnter(part: Models.IPartDef) {\r\n        this.props.onMouseEnter(part);\r\n    }\r\n\r\n    private handleMouseLeaving = () => {\r\n        this.props.onMouseLeave();\r\n    }\r\n}","import React from 'react';\r\n\r\nimport * as Models from '../Models';\r\nimport * as UI from './';\r\n\r\ninterface IMainWindowParts {\r\n    parts: Models.IPartDef[];\r\n    reactorDefinition: Models.IReactorProperties;\r\n}\r\n\r\ninterface IMainWindowState {\r\n    selectedPart?: Models.IPartDef;\r\n    mouseoverPart?: Models.IPartDef;\r\n}\r\n\r\nexport class MainWindow extends React.Component<IMainWindowParts, IMainWindowState> {\r\n    constructor(props: IMainWindowParts) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"MainWindow\" >\r\n                <UI.LeftPanel parts={this.props.parts} selectedPart={this.state.selectedPart}\r\n                    onSelectedPartChange={this.handleSelectedPartChange}\r\n                    onMouseEnterPart={this.handleMouseEnterPart}\r\n                    onMouseLeavePart={this.handleMouseLeavePart} />\r\n                <UI.RightPanel reactorProps={this.props.reactorDefinition}\r\n                    selectedPart={this.state.selectedPart}\r\n                    mouseoverPart={this.mouseoverPart}\r\n                    onMouseEnterPart={this.handleMouseEnterPart}\r\n                    onMouseLeavePart={this.handleMouseLeavePart}  />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private handleSelectedPartChange = (part: Models.IPartDef) => {\r\n        this.setState({ selectedPart: part });\r\n    }\r\n\r\n    private handleMouseEnterPart = (part: Models.IPartDef) => {\r\n        this.setState({ mouseoverPart: part });\r\n    }\r\n\r\n    private handleMouseLeavePart = () => {\r\n        this.setState({ mouseoverPart: undefined });\r\n    }\r\n\r\n    private get mouseoverPart(): Models.IPartDef | undefined {\r\n        return this.state.mouseoverPart || this.state.selectedPart;\r\n    }\r\n}","import React from 'react';\r\n\r\nimport * as Models from '../Models';\r\nimport * as UI from './';\r\n\r\ninterface IReactorPanelProps {\r\n    reactorProps: Models.IReactorProperties;\r\n    selectedPart?: Models.IPartDef;\r\n    onMouseEnterPart(part: Models.IPartDef): void;\r\n    onMouseLeavePart(): void;\r\n}\r\n\r\ninterface IReactorPanelState {\r\n}\r\n\r\nexport class ReactorPanel extends React.Component<IReactorPanelProps, IReactorPanelState> {\r\n    render() {\r\n        const props = this.props.reactorProps;\r\n        let grid = new Array(props.Rows);\r\n\r\n        for (let y = 0; y < props.Rows; y++) {\r\n            grid[y] = new Array(props.Cols);\r\n            for (let x = 0; x < props.Cols; x++) {\r\n                grid[y][x] =\r\n                    <UI.ReactorCell x={x} y={y} key={\"ReactorCell_\" + x + \"_\" + y} selectedPart={this.props.selectedPart}\r\n                        onMouseEnter={this.handleMouseEnterPart}\r\n                        onMouseLeave={this.handleMouseLeavePart} />;\r\n            }\r\n        }\r\n\r\n        return (<div className=\"ReactorPanel\">{grid.map((reactorRow, rowIndex) =>\r\n            <div className=\"reactor-row\" key={\"ReactorRow_\" + rowIndex}>\r\n                {reactorRow.map((reactorCell: UI.ReactorCell) => reactorCell)}\r\n            </div>\r\n        )}</div>)\r\n    };\r\n\r\n    private handleMouseEnterPart = (part: Models.IPartDef) => {\r\n        this.props.onMouseEnterPart(part);\r\n    }\r\n\r\n    private handleMouseLeavePart = () => {\r\n        this.props.onMouseLeavePart();\r\n    }\r\n}","import cloneDeep from 'lodash/cloneDeep';\r\nimport React from 'react';\r\n\r\nimport * as Models from '../Models';\r\n\r\ninterface IReactorCellProps {\r\n    selectedPart?: Models.IPartDef;\r\n    x: number;\r\n    y: number;\r\n    onMouseEnter(part: Models.IPartDef): void;\r\n    onMouseLeave(): void;\r\n}\r\n\r\ninterface IReactorCellState {\r\n    placedPart: Models.IPartDef | null;\r\n}\r\n\r\nexport class ReactorCell extends React.Component<IReactorCellProps, IReactorCellState> {\r\n    constructor(props: IReactorCellProps) {\r\n        super(props)\r\n        this.state = { placedPart: null };\r\n    }\r\n\r\n    render() {\r\n        let x = this.props.x, y = this.props.y;\r\n        return (<div className=\"ReactorCell\" key={\"ReactorCell_\" + x + \"_\" + y}\r\n            onClick={this.handleClick}\r\n            onContextMenu={this.handleContextMenu}\r\n            onMouseEnter={this.handleMouseEnter}\r\n            onMouseLeave={this.handleMouseLeaving}>\r\n            {this.partVisual}\r\n        </div>);\r\n    }\r\n\r\n    private handleMouseEnter = () => {\r\n        if (this.state.placedPart) {\r\n            this.props.onMouseEnter(this.state.placedPart);\r\n        }\r\n    }\r\n\r\n    private handleMouseLeaving = () => {\r\n        if (this.state.placedPart) {\r\n            this.props.onMouseLeave();\r\n        }\r\n    }\r\n\r\n    private handleClick = () => {\r\n        console.debug(`Cell (${this.props.y},${this.props.x}) clicked.`);\r\n        if (!this.state.placedPart && this.props.selectedPart) {\r\n            this.setState({ placedPart: cloneDeep(this.props.selectedPart) });\r\n        }\r\n    }\r\n\r\n    private handleContextMenu = (e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.placedPart) {\r\n            this.setState({ placedPart: null });\r\n        }\r\n    }\r\n\r\n    private get partVisual() {\r\n        const p = this.state.placedPart;\r\n        return p ? p.symbol : \"\";\r\n    }\r\n}","import './App.scss';\r\nimport './UI.scss';\r\n\r\nimport React from 'react';\r\n\r\nimport * as Models from './Models';\r\nimport * as UI from './UI';\r\n\r\nexport default class App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <UI.MainWindow parts={Parts} reactorDefinition={ReactorDefinition} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst ReactorDefinition: Models.IReactorProperties = {\r\n  Rows: 10,\r\n  Cols: 10\r\n};\r\n\r\nconst Parts: Models.IPartDef[] = [\r\n  //Uranium Cells are specific and needs to be treated separately because their cost\r\n  //is not conforming to the unified cost calculation function\r\n  {\r\n    category: 'FuelCell',\r\n    id: \"cu1\",\r\n    name: \"Single Uranium Cell\",\r\n    description: \"Basic fuel cell. Generates 1 power and 1 heat.\",\r\n    symbol: \"[U1]\",\r\n    baseCost: 10,\r\n    baseDurability: 15,\r\n    basePower: 1,\r\n    baseHeat: 1,\r\n    stage: 1\r\n  },\r\n  {\r\n    category: 'FuelCell',\r\n    id: \"cu2\",\r\n    name: \"Double Uranium Cell\",\r\n    description: \"Basic fuel cell. Generates 4 power and 8 heat.\",\r\n    symbol: \"[U2]\",\r\n    baseCost: 25,\r\n    baseDurability: 15,\r\n    basePower: 4,\r\n    baseHeat: 8,\r\n    stage: 2\r\n  },\r\n  {\r\n    category: 'FuelCell',\r\n    id: \"cu3\",\r\n    name: \"Quad Uranium Cell\",\r\n    description: \"Basic fuel cell. Generates 12 power and 36 heat.\",\r\n    symbol: \"[U4]\",\r\n    baseCost: 60,\r\n    baseDurability: 15,\r\n    basePower: 12,\r\n    baseHeat: 36,\r\n    stage: 3\r\n  }\r\n];","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\ninterface IServiceWorkerConfig {\r\n  onUpdate(arg: any): any;\r\n  onSuccess(arg: any): any;\r\n}\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config: IServiceWorkerConfig) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config: IServiceWorkerConfig) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config: IServiceWorkerConfig) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}