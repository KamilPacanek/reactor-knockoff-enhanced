{"version":3,"sources":["Models.ts","UI/LeftPanel.tsx","UI/OperationsPanel.tsx","UI/TopInfoPanel.tsx","UI/RightPanel.tsx","UI/PartsPanel.tsx","UI/PartRenderer.tsx","UI/Part.tsx","UI/MainWindow.tsx","UI/ReactorPanel.tsx","UI/ReactorCell.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["PartCategory","PartType","LeftPanel","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","handleSelectedPartChange","part","props","onSelectedPartChange","handleMouseEnterPart","onMouseEnterPart","handleMouseLeavePart","onMouseLeavePart","handleManualWentHold","onManualWentHold","handleManualWentRelease","onManualWentRelease","handlePauseClick","onPauseClick","handleSellEnergyClick","onSellEnergyClick","inherits","createClass","key","value","hudData","currentEnergy","gameData","maxEnergy","currentHeat","maxHeat","moneyOwned","heatGrowPerTick","energyGrowPerTick","wenting","appState","pause","react_default","a","createElement","className","OperationsPanel_OperationsPanel","PartsPanel_PartsPanel","parts","selectedPart","React","Component","OperationsPanel","handleContextMenu","e","preventDefault","handleWentMouseDown","handleWentMouseUp","handleWentMouseLeave","onContextMenu","io","onMouseDown","onMouseUp","onMouseLeave","fa","onClick","TopInfoPanel","showInfoOf","_renderPartInfo","name","description","RightPanel","TopInfoPanel_TopInfoPanel","mouseoverPart","ReactorPanel_ReactorPanel","reactorProps","PartsPanel","rows","grid","y","x","p","Part_Part","id","onMouseEnter","map","partsRow","rowIndex","PartRenderer","category","Models","FuelCell","cellsCount","Math","pow","stage","cellPacket","i","push","getTypeName","type","toLowerCase","Part","_PartRenderer","handleMouseLeaving","_this2","isSelected","title","handleMouseEnter","renderPart","isAlreadySelected","MainWindow","setState","undefined","state","LeftPanel_LeftPanel","RightPanel_RightPanel","reactorDefinition","get","ReactorPanel","cols","ReactorCell_ReactorCell","reactorRow","reactorCell","ReactorCell","placedPart","handleClick","console","debug","cloneDeep","App","GameData","MainWindow_MainWindow","Parts","ReactorDefinition","Uranium","uiColor","symbol","baseCost","baseDurability","basePower","baseHeat","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9f0bd830.chunk.js","sourcesContent":["export interface IPartDef {\r\n    category: PartCategory,\r\n    type: PartType;\r\n    uiColor: string;\r\n    id: string,\r\n    name: string,\r\n    description: string,\r\n    symbol: string,\r\n    baseCost: number,\r\n    baseDurability: number,\r\n    basePower: number,\r\n    baseHeat: number,\r\n    stage: number\r\n}\r\n\r\nexport interface IReactorProperties {\r\n    cols: number,\r\n    rows: number\r\n}\r\n\r\nexport interface IGameData {\r\n    currentHeat: number;\r\n    maxHeat: number;\r\n    currentEnergy: number;\r\n    maxEnergy: number;\r\n    moneyOwned: number;\r\n    heatGrowPerTick: number;\r\n    energyGrowPerTick: number;\r\n}\r\n\r\nexport enum PartCategory {\r\n    FuelCell\r\n}\r\n\r\nexport enum PartType {\r\n    Uranium\r\n}","import React from 'react';\r\n\r\nimport { IAppState } from '../App';\r\nimport * as Models from '../Models';\r\nimport * as UI from './';\r\nimport * as UIModels from './Models';\r\n\r\ninterface ILeftPanelProps {\r\n    parts: Models.IPartDef[];\r\n    selectedPart?: Models.IPartDef;\r\n    gameData: Models.IGameData;\r\n    appState: IAppState;\r\n    onSelectedPartChange(part: Models.IPartDef): void;\r\n    onMouseEnterPart(part: Models.IPartDef): void;\r\n    onMouseLeavePart(): void;\r\n    onPauseClick(): void;\r\n    onSellEnergyClick(): void;\r\n    onManualWentHold(): void;\r\n    onManualWentRelease(): void;\r\n}\r\n\r\ninterface ILeftPanelState {\r\n}\r\n\r\nexport class LeftPanel extends React.Component<ILeftPanelProps, ILeftPanelState> {\r\n    render() {\r\n        var hudData: UIModels.IHudData = {\r\n            currentEnergy: this.props.gameData.currentEnergy,\r\n            maxEnergy: this.props.gameData.maxEnergy,\r\n            currentHeat: this.props.gameData.currentHeat,\r\n            maxHeat: this.props.gameData.maxHeat,\r\n            moneyOwned: this.props.gameData.moneyOwned,\r\n            heatGrowPerTick: this.props.gameData.heatGrowPerTick,\r\n            energyGrowPerTick: this.props.gameData.energyGrowPerTick,\r\n            wenting: this.props.appState.wenting,\r\n            pause: this.props.appState.pause\r\n        };\r\n\r\n        return (\r\n            <div className=\"LeftPanel\">\r\n                <UI.OperationsPanel hudData={hudData}\r\n                    onManualWentHold={this.handleManualWentHold}\r\n                    onManualWentRelease={this.handleManualWentRelease}\r\n                    onPauseClick={this.handlePauseClick}\r\n                    onSellEnergyClick={this.handleSellEnergyClick} />\r\n                <UI.PartsPanel parts={this.props.parts} selectedPart={this.props.selectedPart}\r\n                    onSelectedPartChange={this.handleSelectedPartChange}\r\n                    onMouseEnterPart={this.handleMouseEnterPart}\r\n                    onMouseLeavePart={this.handleMouseLeavePart} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private handleSelectedPartChange = (part: Models.IPartDef) => {\r\n        this.props.onSelectedPartChange(part);\r\n    }\r\n\r\n    private handleMouseEnterPart = (part: Models.IPartDef) => {\r\n        this.props.onMouseEnterPart(part);\r\n    }\r\n\r\n    private handleMouseLeavePart = () => {\r\n        this.props.onMouseLeavePart();\r\n    }\r\n\r\n    private handleManualWentHold = () => {\r\n        this.props.onManualWentHold();\r\n    }\r\n\r\n    private handleManualWentRelease = () => {\r\n        this.props.onManualWentRelease();\r\n    }\r\n\r\n    private handlePauseClick = () => {\r\n        this.props.onPauseClick();\r\n    }\r\n\r\n    private handleSellEnergyClick = () =>{\r\n        this.props.onSellEnergyClick();\r\n    }\r\n}","import React from 'react';\r\nimport { FaReact } from 'react-icons/fa';\r\nimport { IoIosSwap, IoMdNuclear } from 'react-icons/io';\r\n\r\nimport * as UIModels from './Models';\r\n\r\ninterface IOperationsPanelProps {\r\n    hudData: UIModels.IHudData\r\n    onPauseClick(): void;\r\n    onSellEnergyClick(): void;\r\n    onManualWentHold(): void;\r\n    onManualWentRelease(): void;\r\n}\r\n\r\nexport class OperationsPanel extends React.Component<IOperationsPanelProps, {}> {\r\n    render() {\r\n        let hudData = this.props.hudData;\r\n\r\n        return (\r\n            <div className=\"OperationsPanel\" onContextMenu={this.handleContextMenu}>\r\n                <div className=\"heat-meter\">\r\n                    <div className={\"icon manual-wenting \" + (hudData.wenting ? \"working\" : \"idle\")}>\r\n                        <IoMdNuclear onMouseDown={this.handleWentMouseDown} onMouseUp={this.handleWentMouseUp} onMouseLeave={this.handleWentMouseLeave} />\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <div>{hudData.currentHeat} / {hudData.maxHeat}</div>\r\n                        <div>+{hudData.heatGrowPerTick}/tk</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"energy-meter\">\r\n                    <div className={\"icon power-generation \" + (hudData.pause ? \"idle\" : \"working\")}>\r\n                        <FaReact onClick={this.handlePauseClick} />\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <div>{hudData.currentEnergy} / {hudData.maxEnergy}</div>\r\n                        <div>+{hudData.energyGrowPerTick}/tk</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"sell-energy button\" onClick={this.handleSellEnergyClick}>\r\n                    <div className=\"button-icon\"><IoIosSwap /></div>\r\n                    <div className=\"button-label\">Export energy</div>\r\n                </div>\r\n                <div className=\"money-display\">${hudData.moneyOwned}</div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    private handleContextMenu = (e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    private handlePauseClick = () => {\r\n        this.props.onPauseClick();\r\n    }\r\n\r\n    private handleWentMouseDown = () => {\r\n        this.props.onManualWentHold();\r\n    }\r\n\r\n    private handleWentMouseUp = () => {\r\n        this.props.onManualWentRelease();\r\n    }\r\n\r\n    private handleWentMouseLeave = () => {\r\n        this.props.onManualWentRelease();\r\n    }\r\n\r\n    private handleSellEnergyClick = () => {\r\n        this.props.onSellEnergyClick();\r\n    }\r\n}","import React from 'react';\r\n\r\nimport * as Models from '../Models';\r\n\r\ninterface ITopInforPanel {\r\n    showInfoOf?: Models.IPartDef;\r\n}\r\n\r\nexport class TopInfoPanel extends React.Component<ITopInforPanel, {}> {\r\n    render() {\r\n        return (\r\n            <div className=\"TopInfoPanel\">\r\n                {this.props.showInfoOf && this._renderPartInfo()}\r\n            </div>\r\n        );\r\n    };\r\n\r\n    private _renderPartInfo() {\r\n        return (\r\n            <div>\r\n                <div className=\"part-title\">{this.props.showInfoOf!.name}</div>\r\n                <div className=\"part-desc\">\r\n                    {this.props.showInfoOf!.description}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport * as Models from '../Models';\r\nimport * as UI from './';\r\n\r\ninterface IRightPanelProps {\r\n    reactorProps: any;\r\n    selectedPart?: Models.IPartDef;\r\n    mouseoverPart?: Models.IPartDef;\r\n    onMouseEnterPart(part: Models.IPartDef): void;\r\n    onMouseLeavePart(): void;\r\n}\r\n\r\ninterface IRightPanelState {\r\n}\r\n\r\nexport class RightPanel extends React.Component<IRightPanelProps, IRightPanelState> {\r\n    render() {\r\n        return (\r\n            <div className=\"RightPanel\">\r\n                <UI.TopInfoPanel showInfoOf={this.props.mouseoverPart} />\r\n                <UI.ReactorPanel reactorProps={this.props.reactorProps} selectedPart={this.props.selectedPart}\r\n                    onMouseEnterPart={this.handleMouseEnterPart}\r\n                    onMouseLeavePart={this.handleMouseLeavePart}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private handleMouseEnterPart = (part: Models.IPartDef) => {\r\n        this.props.onMouseEnterPart(part);\r\n    }\r\n\r\n    private handleMouseLeavePart = () => {\r\n        this.props.onMouseLeavePart();\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport * as Models from '../Models';\r\nimport * as UI from './';\r\n\r\ninterface IPartsPanelProps {\r\n    parts: Models.IPartDef[];\r\n    selectedPart?: Models.IPartDef;\r\n    onSelectedPartChange(part: Models.IPartDef): void;\r\n    onMouseEnterPart(part: Models.IPartDef): void;\r\n    onMouseLeavePart(): void;\r\n}\r\n\r\ninterface IPartsPanelState {\r\n}\r\n\r\nexport class PartsPanel extends React.Component<IPartsPanelProps, IPartsPanelState> {\r\n    render() {\r\n        const parts = this.props.parts;\r\n        const cols = 3;\r\n        const rows = parts.length / cols;\r\n\r\n        let grid = new Array(rows);\r\n\r\n        for (let y = 0; y < rows; y++) {\r\n            grid[y] = new Array(cols);\r\n            for (let x = 0; x < cols; x++) {\r\n                let p = parts[y * cols + x];\r\n                grid[y][x] = <UI.Part part={p} key={p.id} selectedPart={this.props.selectedPart}\r\n                    onSelectedPartChange={this.handleSelectedPartChange}\r\n                    onMouseEnter={this.handleMouseEnterPart}\r\n                    onMouseLeave={this.handleMouseLeavePart} />;\r\n            }\r\n        }\r\n\r\n        return (<div className=\"PartsPanel\" onContextMenu={this.handleContextMenu}>\r\n            {grid.map((partsRow, rowIndex) =>\r\n                <div className=\"parts-row\" key={\"ReactorRow_\" + rowIndex}>\r\n                    {partsRow.map((part: Models.IPartDef) => part)}\r\n                </div>\r\n            )}</div>)\r\n    };\r\n    \r\n    private handleContextMenu = (e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    private handleSelectedPartChange = (part: Models.IPartDef) => {\r\n        this.props.onSelectedPartChange(part);\r\n    }\r\n\r\n    private handleMouseEnterPart = (part: Models.IPartDef) => {\r\n        this.props.onMouseEnterPart(part);\r\n    }\r\n\r\n    private handleMouseLeavePart = () => {\r\n        this.props.onMouseLeavePart();\r\n    }\r\n}","import React from 'react';\r\nimport { IoMdBatteryCharging } from 'react-icons/io';\r\n\r\nimport * as Models from '../Models';\r\n\r\nexport abstract class PartRenderer<T, U> extends React.Component<T, U> {\r\n    protected renderPart(part: Models.IPartDef) {\r\n        switch (part.category) {\r\n            case Models.PartCategory.FuelCell:\r\n                let cellsCount = Math.pow(2, part.stage - 1);\r\n                let cellPacket = [];\r\n                for (let i = 0; i < cellsCount; i++) {\r\n                    cellPacket.push(<IoMdBatteryCharging className={\"fuel-cell-\" + i} key={\"fuelCellPart_\" + i} />);\r\n                }\r\n\r\n                return <div className={(\"fuel-cells-\" + cellsCount) + \" \" + this.getTypeName(part.type).toLowerCase() + \"-cells\"}>\r\n                    {cellPacket.map(p => p)}\r\n                </div>;\r\n        }\r\n    }\r\n\r\n    private getTypeName(type: Models.PartType): string{\r\n        return Models.PartType[type];\r\n    }\r\n}","import React from 'react';\r\n\r\nimport * as Models from '../Models';\r\nimport { PartRenderer } from './PartRenderer';\r\n\r\ninterface IPartProps {\r\n    part: Models.IPartDef;\r\n    selectedPart?: Models.IPartDef;\r\n    onSelectedPartChange(part: Models.IPartDef | null): void;\r\n    onMouseEnter(part: Models.IPartDef): void;\r\n    onMouseLeave(): void;\r\n}\r\n\r\ninterface IPartState {\r\n}\r\n\r\nexport class Part extends PartRenderer<IPartProps, IPartState> {\r\n    render() {\r\n        const p = this.props.part;\r\n        const isSelected = this.props.selectedPart ? this.props.selectedPart.id === p.id : false;\r\n\r\n        return (\r\n            <div className={\"Part \" + (isSelected ? \"selected\" : \"\")} title={p.name}\r\n                onClick={() => this.handleSelectedPartChange(p, isSelected)}\r\n                onMouseEnter={() => this.handleMouseEnter(p)}\r\n                onMouseLeave={this.handleMouseLeaving}>\r\n                {this.renderPart(p)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private handleSelectedPartChange(part: Models.IPartDef | null, isAlreadySelected: boolean) {\r\n        this.props.onSelectedPartChange(isAlreadySelected ? null : part);\r\n    }\r\n\r\n    private handleMouseEnter(part: Models.IPartDef) {\r\n        this.props.onMouseEnter(part);\r\n    }\r\n\r\n    private handleMouseLeaving = () => {\r\n        this.props.onMouseLeave();\r\n    }\r\n}","import React from 'react';\r\n\r\nimport { IAppState } from '../App';\r\nimport * as Models from '../Models';\r\nimport * as UI from './';\r\n\r\ninterface IMainWindowParts {\r\n    parts: Models.IPartDef[];\r\n    reactorDefinition: Models.IReactorProperties;\r\n    gameData: Models.IGameData;\r\n    appState: IAppState;\r\n    onPauseClick(): void;\r\n    onSellEnergyClick(): void;\r\n    onManualWentHold(): void;\r\n    onManualWentRelease(): void;\r\n}\r\n\r\ninterface IMainWindowState {\r\n    selectedPart?: Models.IPartDef;\r\n    mouseoverPart?: Models.IPartDef;\r\n}\r\n\r\nexport class MainWindow extends React.Component<IMainWindowParts, IMainWindowState> {\r\n    constructor(props: IMainWindowParts) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"MainWindow\" >\r\n                <UI.LeftPanel parts={this.props.parts} selectedPart={this.state.selectedPart}\r\n                    gameData={this.props.gameData} appState={this.props.appState}\r\n                    onSelectedPartChange={this.handleSelectedPartChange}\r\n                    onMouseEnterPart={this.handleMouseEnterPart}\r\n                    onMouseLeavePart={this.handleMouseLeavePart}\r\n                    onManualWentHold={this.handleManualWentHold}\r\n                    onManualWentRelease={this.handleManualWentRelease}\r\n                    onPauseClick={this.handlePauseClick} \r\n                    onSellEnergyClick={this.handleSellEnergyClick}/>\r\n                <UI.RightPanel reactorProps={this.props.reactorDefinition}\r\n                    selectedPart={this.state.selectedPart}\r\n                    mouseoverPart={this.mouseoverPart}\r\n                    onMouseEnterPart={this.handleMouseEnterPart}\r\n                    onMouseLeavePart={this.handleMouseLeavePart} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private handleSelectedPartChange = (part: Models.IPartDef) => {\r\n        this.setState({ selectedPart: part });\r\n    }\r\n\r\n    private handleMouseEnterPart = (part: Models.IPartDef) => {\r\n        this.setState({ mouseoverPart: part });\r\n    }\r\n\r\n    private handleMouseLeavePart = () => {\r\n        this.setState({ mouseoverPart: undefined });\r\n    }\r\n\r\n    private get mouseoverPart(): Models.IPartDef | undefined {\r\n        return this.state.mouseoverPart || this.state.selectedPart;\r\n    }\r\n\r\n    private handleManualWentHold = () => {\r\n        this.props.onManualWentHold();\r\n    }\r\n\r\n    private handleManualWentRelease = () => {\r\n        this.props.onManualWentRelease();\r\n    }\r\n\r\n    private handlePauseClick = () => {\r\n        this.props.onPauseClick();\r\n    }\r\n    private handleSellEnergyClick = () => {\r\n        this.props.onSellEnergyClick();\r\n    }\r\n}","import React from 'react';\r\n\r\nimport * as Models from '../Models';\r\nimport * as UI from './';\r\n\r\ninterface IReactorPanelProps {\r\n    reactorProps: Models.IReactorProperties;\r\n    selectedPart?: Models.IPartDef;\r\n    onMouseEnterPart(part: Models.IPartDef): void;\r\n    onMouseLeavePart(): void;\r\n}\r\n\r\ninterface IReactorPanelState {\r\n}\r\n\r\nexport class ReactorPanel extends React.Component<IReactorPanelProps, IReactorPanelState> {\r\n    render() {\r\n        const props = this.props.reactorProps;\r\n        let grid = new Array(props.rows);\r\n\r\n        for (let y = 0; y < props.rows; y++) {\r\n            grid[y] = new Array(props.cols);\r\n            for (let x = 0; x < props.cols; x++) {\r\n                grid[y][x] =\r\n                    <UI.ReactorCell x={x} y={y} key={\"ReactorCell_\" + x + \"_\" + y} selectedPart={this.props.selectedPart}\r\n                        onMouseEnter={this.handleMouseEnterPart}\r\n                        onMouseLeave={this.handleMouseLeavePart} />;\r\n            }\r\n        }\r\n\r\n        return (<div className=\"ReactorPanel\">{grid.map((reactorRow, rowIndex) =>\r\n            <div className=\"reactor-row\" key={\"ReactorRow_\" + rowIndex}>\r\n                {reactorRow.map((reactorCell: UI.ReactorCell) => reactorCell)}\r\n            </div>\r\n        )}</div>)\r\n    };\r\n\r\n    private handleMouseEnterPart = (part: Models.IPartDef) => {\r\n        this.props.onMouseEnterPart(part);\r\n    }\r\n\r\n    private handleMouseLeavePart = () => {\r\n        this.props.onMouseLeavePart();\r\n    }\r\n}","import cloneDeep from 'lodash/cloneDeep';\r\nimport React from 'react';\r\n\r\nimport * as Models from '../Models';\r\nimport { PartRenderer } from './PartRenderer';\r\n\r\ninterface IReactorCellProps {\r\n    selectedPart?: Models.IPartDef;\r\n    x: number;\r\n    y: number;\r\n    onMouseEnter(part: Models.IPartDef): void;\r\n    onMouseLeave(): void;\r\n}\r\n\r\ninterface IReactorCellState {\r\n    placedPart: Models.IPartDef | null;\r\n}\r\n\r\nexport class ReactorCell extends PartRenderer<IReactorCellProps, IReactorCellState> {\r\n    constructor(props: IReactorCellProps) {\r\n        super(props)\r\n        this.state = { placedPart: null };\r\n    }\r\n\r\n    render() {\r\n        let x = this.props.x, y = this.props.y;\r\n        return (<div className=\"ReactorCell\" key={\"ReactorCell_\" + x + \"_\" + y}\r\n            onClick={this.handleClick}\r\n            onContextMenu={this.handleContextMenu}\r\n            onMouseEnter={this.handleMouseEnter}\r\n            onMouseLeave={this.handleMouseLeaving}>\r\n            {this.state.placedPart ? this.renderPart(this.state.placedPart) : null}\r\n        </div>);\r\n    }\r\n\r\n    private handleMouseEnter = () => {\r\n        if (this.state.placedPart) {\r\n            this.props.onMouseEnter(this.state.placedPart);\r\n        }\r\n    }\r\n\r\n    private handleMouseLeaving = () => {\r\n        if (this.state.placedPart) {\r\n            this.props.onMouseLeave();\r\n        }\r\n    }\r\n\r\n    private handleClick = () => {\r\n        console.debug(`Cell (${this.props.y},${this.props.x}) clicked.`);\r\n        if (!this.state.placedPart && this.props.selectedPart) {\r\n            this.setState({ placedPart: cloneDeep(this.props.selectedPart) });\r\n        }\r\n    }\r\n\r\n    private handleContextMenu = (e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.placedPart) {\r\n            this.setState({ placedPart: null });\r\n        }\r\n    }\r\n}","import './App.scss';\r\nimport './UI.scss';\r\n\r\nimport React from 'react';\r\n\r\nimport * as Models from './Models';\r\nimport * as UI from './UI';\r\n\r\nexport interface IAppState {\r\n  pause: boolean;\r\n  wenting: boolean;\r\n  moneyOwned: number;\r\n  currentEnergy: number;\r\n}\r\n\r\nexport default class App extends React.Component<{}, IAppState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    this.state = { pause: true, wenting: false, moneyOwned: GameData.moneyOwned, currentEnergy: GameData.currentEnergy };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <UI.MainWindow parts={Parts} reactorDefinition={ReactorDefinition}\r\n          gameData={GameData} appState={this.state}\r\n          onManualWentHold={this.handleManualWentHold}\r\n          onManualWentRelease={this.handleManualWentRelease}\r\n          onPauseClick={this.handlePauseClick}\r\n          onSellEnergyClick={this.handleSellEnergyClick} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private handlePauseClick = () => {\r\n    this.setState({ pause: !this.state.pause });\r\n  }\r\n\r\n  private handleManualWentHold = () => {\r\n    this.setState({ wenting: true });\r\n  }\r\n\r\n  private handleManualWentRelease = () => {\r\n    this.setState({ wenting: false });\r\n  }\r\n\r\n  private handleSellEnergyClick = () => {\r\n    this.setState({ moneyOwned: this.state.moneyOwned + this.state.currentEnergy, currentEnergy: 0 });\r\n  }\r\n}\r\n\r\nconst GameData: Models.IGameData = {\r\n  currentHeat: 0,\r\n  maxHeat: 1000,\r\n  currentEnergy: 0,\r\n  maxEnergy: 100,\r\n  moneyOwned: 0,\r\n  heatGrowPerTick: 0,\r\n  energyGrowPerTick: 0\r\n};\r\n\r\nconst ReactorDefinition: Models.IReactorProperties = {\r\n  rows: 10,\r\n  cols: 10\r\n};\r\n\r\nconst Parts: Models.IPartDef[] = [\r\n  //Uranium Cells are specific and needs to be treated separately because their cost\r\n  //is not conforming to the unified cost calculation function\r\n  {\r\n    category: Models.PartCategory.FuelCell,\r\n    type: Models.PartType.Uranium,\r\n    id: \"cu1\",\r\n    uiColor: \"#40e141\",\r\n    name: \"Single Uranium Cell\",\r\n    description: \"Basic fuel cell. Generates 1 power and 1 heat.\",\r\n    symbol: \"[U1]\",\r\n    baseCost: 10,\r\n    baseDurability: 15,\r\n    basePower: 1,\r\n    baseHeat: 1,\r\n    stage: 1\r\n  },\r\n  {\r\n    category: Models.PartCategory.FuelCell,\r\n    type: Models.PartType.Uranium,\r\n    id: \"cu2\",\r\n    uiColor: \"#15ae16\",\r\n    name: \"Double Uranium Cell\",\r\n    description: \"Basic fuel cell. Generates 4 power and 8 heat.\",\r\n    symbol: \"[U2]\",\r\n    baseCost: 25,\r\n    baseDurability: 15,\r\n    basePower: 4,\r\n    baseHeat: 8,\r\n    stage: 2\r\n  },\r\n  {\r\n    category: Models.PartCategory.FuelCell,\r\n    type: Models.PartType.Uranium,\r\n    id: \"cu3\",\r\n    uiColor: \"#038f04\",\r\n    name: \"Quad Uranium Cell\",\r\n    description: \"Basic fuel cell. Generates 12 power and 36 heat.\",\r\n    symbol: \"[U4]\",\r\n    baseCost: 60,\r\n    baseDurability: 15,\r\n    basePower: 12,\r\n    baseHeat: 36,\r\n    stage: 3\r\n  }\r\n];","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\ninterface IServiceWorkerConfig {\r\n  onUpdate(arg: any): any;\r\n  onSuccess(arg: any): any;\r\n}\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config: IServiceWorkerConfig) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config: IServiceWorkerConfig) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config: IServiceWorkerConfig) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}